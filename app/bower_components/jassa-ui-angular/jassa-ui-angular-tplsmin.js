/*
 * jassa-ui-angular
 * https://github.com/GeoKnow/Jassa-UI-Angular

 * Version: 0.8.1 - 2014-09-24
 * License: MIT
 */
angular.module("ui.jassa",["ui.jassa.tpls","ui.jassa.auto-focus","ui.jassa.blurify","ui.jassa.constraint-list","ui.jassa.facet-tree","ui.jassa.facet-typeahead","ui.jassa.facet-value-list","ui.jassa.jassa-list-browser","ui.jassa.jassa-media-list","ui.jassa.lang-select","ui.jassa.list-search","ui.jassa.pointer-events-scroll-fix","ui.jassa.resizable","ui.jassa.sparql-grid","ui.jassa.template-list"]),angular.module("ui.jassa.tpls",["template/constraint-list/constraint-list.html","template/facet-tree/facet-dir-content.html","template/facet-tree/facet-dir-ctrl.html","template/facet-tree/facet-tree-item.html","template/facet-tree/facet-tree-root.html","template/facet-value-list/facet-value-list.html","template/jassa-list-browser/jassa-list-browser.html","template/jassa-media-list/jassa-media-list.html","template/lang-select/lang-select.html","template/list-search/list-search.html","template/sparql-grid/sparql-grid.html","template/template-list/template-list.html"]),angular.module("ui.jassa.auto-focus",[]).directive("autoFocus",function(a,b){return{link:function(c,d,e){var f=b(e.autoFocus);c.$watch(f,function(b){b===!0&&a(function(){d[0].focus()})}),d.bind("blur",function(){f.assign&&c.$apply(f.assign(c,!1))})}}}),angular.module("ui.jassa.blurify",[]).directive("blurify",["$parse",function(a){return{require:"ngModel",restrict:"A",link:function(b,c,d,e){c.on("focus",function(){e.$render()}),c.on("blur",function(){var e=a(d.ngModel)(b),f=a(d.blurify)(b);if(f){var g=f(e);g&&g.then?g.then(function(a){c.val(a)}):c.val(g)}})}}}]),angular.module("ui.jassa.constraint-list",[]).controller("ConstraintListCtrl",["$scope","$q","$rootScope",function(a,b){var c=this,d=function(){var b=a.facetTreeConfig;a.constraintManager=b?a.facetTreeConfig.getFacetConfig().getConstraintManager():null},e=function(){d(),c.refresh()};a.ObjectUtils=Jassa.util.ObjectUtils;var f="[ObjectUtils.hashCode(facetTreeConfig)]";a.$watch(f,function(){e()},!0),a.$watch("sparqlService",function(){e()}),a.$watch("labelService",function(){e()});c.refresh=function(){var c=a.constraintManager,d=c?c.getConstraints():[],e=jassa.service.LookupServiceUtils.lookup(a.labelService,d);jassa.sponate.angular.bridgePromise(e,b.defer(),a,function(b){var c=_(d).map(function(a){var c=b.get(a),d={constraint:a,label:c};return d});a.constraints=c})},a.removeConstraint=function(b){a.constraintManager.removeConstraint(b.constraint)}}]).directive("constraintList",function(){return{restrict:"EA",replace:!0,templateUrl:"template/constraint-list/constraint-list.html",transclude:!1,require:"constraintList",scope:{sparqlService:"=",labelService:"=",facetTreeConfig:"=",onSelect:"&select"},controller:"ConstraintListCtrl"}}),angular.module("ui.jassa.facet-tree",[]).controller("FacetTreeDirContentCtrl",["$rootScope","$scope","$q",function(){}]).directive("facetTreeDirContent",function(){return{restrict:"EA",replace:!0,templateUrl:"template/facet-tree/facet-tree-content.html",transclude:!1,require:"facetTree",scope:{sparqlService:"=",facetTreeConfig:"=",plugins:"=",onSelect:"&select"},controller:"FacetTreeDirContentCtrl",compile:function(){return function(){}}}}),angular.module("ui.jassa.facet-tree",["ui.jassa.template-list"]).controller("FacetTreeCtrl",["$rootScope","$scope","$q",function(a,b,c){var d=this;b.loading={data:!1};var e=function(){var a=b.sparqlService&&b.facetTreeConfig;b.facetTreeService=a?Jassa.facete.FaceteUtils.createFacetTreeService(b.sparqlService,b.facetTreeConfig,null):null},f=function(){e(),d.refresh()};b.setFacetHover=function(a,b){a.isHovered=b,a.incoming&&(a.incoming.isHovered=b),a.outgoing&&(a.outgoing.isHovered=b)},b.ObjectUtils=Jassa.util.ObjectUtils;var g="[ObjectUtils.hashCode(facetTreeConfig)]";b.$watch(g,function(){f()},!0),b.$watch("sparqlService",function(){f()}),b.doFilter=function(a,c){b.facetTreeConfig.getPathToFilterString().put(a,c),d.refresh()},d.refresh=function(){var d=b.facet,e=d?d.item.getPath():new Jassa.facete.Path;if(b.facetTreeService){var f=Jassa.facete.FaceteUtils.createFacetTreeTagger(b.facetTreeConfig.getPathToFilterString());b.loading.data=!0;var g=b.facetTreeService.fetchFacetTree(e);Jassa.sponate.angular.bridgePromise(g,c.defer(),a,function(a){f.applyTags(a),b.facet=a,b.loading.data=!1})}else b.facet=null},b.toggleCollapsed=function(a){Jassa.util.CollectionUtils.toggleItem(b.facetTreeConfig.getExpansionSet(),a);var c=b.facetTreeConfig.getExpansionMap().get(a);null==c&&b.facetTreeConfig.getExpansionMap().put(a,1),d.refresh()},b.selectIncoming=function(a){if(b.facetTreeConfig){var c=b.facetTreeConfig.getExpansionMap().get(a);2!=c&&(b.facetTreeConfig.getExpansionMap().put(a,2),d.refresh())}},b.selectOutgoing=function(a){if(b.facetTreeConfig){var c=b.facetTreeConfig.getExpansionMap().get(a);1!=c&&(b.facetTreeConfig.getExpansionMap().put(a,1),d.refresh())}},b.selectFacetPage=function(a,c){var e=c.item.getPath(),f=b.facetTreeConfig.getFacetStateProvider().getFacetState(e),g=f.getResultRange();console.log("Facet state for path "+e+": "+f);var h=g.getLimit()||0,i=h?(a-1)*h:null;g.setOffset(i),d.refresh()},b.toggleSelected=function(a){b.onSelect({path:a})},b.toggleTableLink=function(a){tableMod.togglePath(a),b.$emit("facete:refresh")}}]).directive("facetTree",function(){return{restrict:"EA",replace:!0,templateUrl:"template/facet-tree/facet-tree-root.html",transclude:!1,require:"facetTree",scope:{sparqlService:"=",facetTreeConfig:"=",plugins:"=",pluginContext:"=",onSelect:"&select"},controller:"FacetTreeCtrl",compile:function(){return function(){}}}}),angular.module("ui.jassa.facet-typeahead",[]).directive("facetTypeahead",["$compile","$q","$parse",function(a,b,c){var d=Class.create({initialize:function(a,b,c,d){this.$scope=a,this.$q=b,this.configExpr=c,this.id=d},getSuggestions:function(a){var b=this.configExpr(this.$scope),c=b.sparqlService,d=b.facetTreeConfig,e=b.idToModelPathMapping,f=e[this.id];if(!f)throw console.log("Cannot retrieve model-path mapping for facet-typeahead directive with id "+id),"Bailing out";var g=f.limit||b.defaultLimit||10,h=f.offset||b.defaultOffset||0,i=f.pathExpr(this.scope),j=jassa.facete.PathUtils.parsePathSpec(i),k=d.getFacetConfig(),l=k.getConstraintManager(),m=l.shallowClone(),n=new jassa.facete.FacetConfig;n.setConstraintManager(m),n.setBaseConcept(k.getBaseConcept()),n.setRootFacetNode(k.getRootFacetNode()),n.setLabelMap(k.getLabelMap());var o=new jassa.facete.FacetTreeConfig;o.facetConfig=n;var p=this,q=_(e).map(function(a){var b=a.modelExpr(p.$scope);if(!b||""===b.trim())return null;var c=jassa.rdf.NodeFactory.createPlainLiteral(b),d=a.pathExpr(p.$scope),e=jassa.facete.PathUtils.parsePathSpec(d),f=new jassa.facete.ConstraintRegex(e,c);return f});q=_(q).compact(),_(q).each(function(a){m.addConstraint(a)});var r=new jassa.facete.FacetValueService(c,o),s=r.createFacetValueFetcher(j,a),t=s.fetchData(h,g),u=s.fetchCount(),v=jQuery.when.apply(null,[t,u]).pipe(function(a,b){var c={offset:this.offset,count:b,data:a};return c}),w=v.pipe(function(a){var b=_(a.data).map(function(a){return a.displayLabel});return b}),x=jassa.sponate.angular.bridgePromise(w,this.$q.defer(),this.$scope.$root);return x}});return{restrict:"A",scope:!0,priority:1001,terminal:!0,compile:function(e,f){this.instanceId||(this.instanceId=0);var g="facetTypeAhead-"+this.instanceId++,h=f.ngModel,i=f.facetTypeahead,j=f.facetTypeaheadPath;e.removeAttr("facet-typeahead"),e.removeAttr("facet-typeahead-path");var k="item for item in facetTypeAheadService.getSuggestions($viewValue)";return e.attr("typeahead",k),{pre:function(a){var e=c(h),f=c(j),k=c(i);a.$watch(i,function(a,b){a&&(a.idToModelPathMapping||(a.idToModelPathMapping={}),a.idToModelPathMapping[g]={modelExpr:e,modelExprStr:h,pathExprStr:j,pathExpr:f},b&&b!=a&&b.modelToPathMapping&&delete b.idToModelPathMapping[g])}),a.facetTypeAheadService=new d(a,b,k,g)},post:function(b,c){a(c)(b)}}}}}]),angular.module("ui.jassa.facet-value-list",[]).controller("FacetValueListCtrl",["$rootScope","$scope","$q",function(a,b,c){b.filterText="",b.pagination={totalItems:0,currentPage:1,maxSize:5},b.loading={data:!1,pageCount:!1};var d=null,e=this,f=function(){var a=b.sparqlService&&b.facetTreeConfig&&b.path;d=a?new jassa.facete.FacetValueService(b.sparqlService,b.facetTreeConfig):null},g=function(){f(),e.refresh()};b.ObjectUtils=jassa.util.ObjectUtils;var h='[ObjectUtils.hashCode(facetTreeConfig), "" + path, pagination.currentPage]';b.$watch(h,function(){g()},!0),b.$watch("sparqlService",function(){g()}),b.toggleConstraint=function(a){var b=d.getFacetTreeConfig().getFacetConfig().getConstraintManager(),c=new jassa.facete.ConstraintEquals(a.path,a.node);b.toggleConstraint(c)},e.refresh=function(){var a=b.path;if(!d||!a)return b.totalItems=0,void(b.facetValues=[]);var e=d.createFacetValueFetcher(b.path,b.filterText),f=e.fetchCount(),g=10,h=(b.pagination.currentPage-1)*g,i=e.fetchData(h,g);b.loading.pageCount=!0,b.loading.data=!0,jassa.sponate.angular.bridgePromise(f,c.defer(),b.$root,function(a){b.pagination.totalItems=a.count,b.loading.pageCount=!1}),jassa.sponate.angular.bridgePromise(i,c.defer(),b.$root,function(a){b.facetValues=a,b.loading.data=!1})},b.filterTable=function(a){b.filterText=a,g()}}]).directive("facetValueList",function(){return{restrict:"EA",replace:!0,templateUrl:"template/facet-value-list/facet-value-list.html",transclude:!1,require:"facetValueList",scope:{sparqlService:"=",facetTreeConfig:"=",path:"=",onSelect:"&select"},controller:"FacetValueListCtrl"}}),angular.module("ui.jassa.jassa-list-browser",[]).directive("jassaListBrowser",function(){return{restrict:"EA",replace:!0,scope:{listService:"=",filter:"=",limit:"=",offset:"=",totalItems:"=",items:"=",maxSize:"=",langs:"=",availableLangs:"=",doFilter:"=",searchModes:"=",activeSearchMode:"=",context:"="},templateUrl:"template/jassa-list-browser/jassa-list-browser.html"}}),angular.module("ui.jassa.jassa-media-list",[]).controller("JassaMediaListCtrl",["$scope","$q","$timeout",function(a,b,c){a.currentPage=1,a.doRefresh=function(){b.when(a.listService.fetchCount(a.filter)).then(function(b){c(function(){a.totalItems=b.count})}),b.when(a.listService.fetchItems(a.filter,a.limit,a.offset)).then(function(b){c(function(){a.items=b.map(function(a){return a.val})})})},a.$watch("offset",function(){a.currentPage=Math.floor(a.offset/a.limit)+1}),a.$watch("currentPage",function(){a.offset=(a.currentPage-1)*a.limit}),a.$watch("[filter, limit, offset, refresh]",a.doRefresh,!0),a.$watch("listService",a.doRefresh)}]).directive("jassaMediaList",[function(){return{restrict:"EA",templateUrl:"template/jassa-media-list/jassa-media-list.html",transclude:!0,replace:!0,scope:{listService:"=",filter:"=",limit:"=",offset:"=",totalItems:"=",items:"=",maxSize:"=",refresh:"=",context:"="},controller:"JassaMediaListCtrl",link:function(a,b,c,d,e){e(a,function(a){var c=b.find("ng-transclude"),d=c.parent();c.remove(),d.append(a)})}}}]),angular.module("ui.jassa.lang-select",["ui.sortable","ui.keypress","ngSanitize"]).controller("LangSelectCtrl",["$scope",function(a){a.newLang="",a.showLangInput=!1;var b=!1;a.sortConfig={placeholder:"lang-sortable-placeholder",receive:function(){b=!1},over:function(){b=!1},out:function(){b=!0},beforeStop:function(c,d){if(b===!0){var e=d.item.context.textContent;if(e){e=e.trim();var f=a.langs.indexOf(e);a.langs.splice(f,1),d.item.remove()}}},stop:function(){a.$$phase||a.$apply()}},a.getLangSuggestions=function(){var b,c=a.availableLangs;return b=c?Array.isArray(c)?c:c instanceof Function?c():[]:[]},a.confirmAddLang=function(b){var c=a.langs.indexOf(b);0>c&&a.langs.push(b),a.showLangInput=!1,a.newLang=""}}]).directive("langSelect",function(){return{restrict:"EA",replace:!0,templateUrl:"template/lang-select/lang-select.html",scope:{langs:"=",availableLangs:"="},controller:"LangSelectCtrl"}}),angular.module("ui.jassa.list-search",[]).controller("ListSearchCtrl",["$scope",function(a){a.setActiveSearchMode=function(b){a.activeSearchMode=b}}]).directive("listSearch",function(){return{restrict:"EA",scope:{searchModes:"=",activeSearchMode:"=",ngModel:"=",onSubmit:"&submit"},controller:"ListSearchCtrl",templateUrl:"template/list-search/list-search.html"}}),angular.module("ui.jassa.pointer-events-scroll-fix",[]).directive("pointerEventsScrollFix",function(){return{restrict:"A",compile:function(){return{post:function(a,b){jQuery.fn.hasScrollBar||(jQuery.fn.hasScrollBar=function(){var a=this.get(0);if(!a)return console.log("Should not happen"),!1;var b=a.scrollHeight>a.clientHeight||a.scrollWidth>a.clientWidth;return b});var c=null;a.$watch(function(){return jQuery(b).hasScrollBar()},function(a){console.log("Scrollbar state: ",a,c),a?c||(c=b.css("pointer-events"),b.css("pointer-events","auto")):c&&(b.css("pointer-events",c),c=null)})}}}}}),angular.module("ui.jassa.resizable",[]).directive("resizable",function(){return{restrict:"A",scope:{resizable:"=",onResize:"&onResize",onResizeInit:"&onResizeInit",bounds:"="},compile:function(){return{post:function(a,b){a.bounds||(a.bounds={});var c=!1,d=function(a){c&&jQuery(b).resizable("destroy"),jQuery(b).resizable(a),c=!0},e=["top","bottom","width","height"],f=function(a){var c=b.prop("style"),d=_(c).pick(a);return d},g=function(a){_(a).each(function(a,c){b.css(c,a)})},h=f(e);angular.copy(h,a.bounds),a.onResizeInit&&a.onResizeInit({bounds:h});var i=function(a){g(a)};a.$watch("bounds",i,!0),jQuery(b).on("resizestop",function(b,c){var d=f(e);angular.copy(d,a.bounds),a.onResize&&a.onResize(b,c,d),a.$$phase||a.$apply()}),a.$watch("resizable",d)}}}}}),angular.module("ui.jassa.sparql-grid",[]).controller("SparqlGridCtrl",["$scope","$rootScope","$q",function(a,b,c){var d=(jassa.rdf,jassa.sparql,jassa.service),e=jassa.util,f=(jassa.sponate,jassas.facete),g=function(a,b){for(var c=[],d=0;d<a.fields.length;++d){var g=a.fields[d],h=a.directions[d],i=0;if("asc"===h?i=1:"desc"===h&&(i=-1),0!==i){var j=new f.SortCondition(g,i);c.push(j)}}var k=b.getSortConditions(),l=_(c).isEqual(k);l||e.ArrayUtils.replace(k,c)},h=function(){var b=a.config,c=a.sparqlService,e=b?b.queryFactory:null,f=e?e.createQuery():null,g=new d.SparqlTableService(c,f);return g};a.$watch("gridOptions.sortInfo",function(b){var c=a.config,d=c?c.tableMod:null;null!=d&&g(b,d),a.refreshData()},!0),a.$watch("[pagingOptions, filterOptions]",function(){a.refreshData()},!0);var i=function(){a.refresh()};a.ObjectUtils=e.ObjectUtils,a.$watch("[ObjectUtils.hashCode(config), disableRequests]",function(){i()},!0),a.$watch("sparqlService",function(){i()}),a.totalServerItems=0,a.pagingOptions={pageSizes:[10,50,100],pageSize:10,currentPage:1},a.refresh=function(){var b=h();return a.disableRequests?void e.ArrayUtils.clear(a.myData):(a.refreshSchema(b),a.refreshPageCount(b),void a.refreshData(b))},a.refreshSchema=function(b){b=b||h();var c=a.colDefs,d=b.getSchema(),e=_(d).isEqual(c);e||(a.colDefs=d)},a.refreshPageCount=function(b){b=b||h();var d=b.fetchCount();jassa.sponate.angular.bridgePromise(d,c.defer(),a,function(b){a.totalServerItems=b.count})},a.refreshData=function(b){b=b||h();var d=a.pagingOptions.currentPage,e=a.pagingOptions.pageSize,f=(d-1)*e,g=b.fetchData(e,f);jassa.sponate.angular.bridgePromise(g,c.defer(),a,function(b){var c=_(b).isEqual(a.myData);c||(a.myData=b)})};var j=[];if(ngGridFlexibleHeightPlugin){var k=ngGridFlexibleHeightPlugin;j.push(new k(30))}a.myData=[],a.gridOptions={data:"myData",enablePaging:!0,useExternalSorting:!0,showFooter:!0,totalServerItems:"totalServerItems",enableHighlighting:!0,sortInfo:{fields:[],directions:[],columns:[]},pagingOptions:a.pagingOptions,filterOptions:a.filterOptions,plugins:j,columnDefs:"colDefs"}}]).directive("sparqlGrid",["$parse",function(){return{restrict:"EA",replace:!0,templateUrl:"template/sparql-grid/sparql-grid.html",controller:"SparqlGridCtrl",scope:{sparqlService:"=",config:"=",disableRequests:"=",onSelect:"&select",onUnselect:"&unselect"},link:function(){}}}]),angular.module("ui.jassa.template-list",[]).controller("TemplateListCtrl",["$scope",function(){}]).directive("templateList",["$compile",function(a){return{restrict:"EA",replace:!0,templateUrl:"template/template-list/template-list.html",transclude:!0,scope:{templates:"=",data:"=",context:"="},controller:"TemplateListCtrl",compile:function(){return{pre:function(b,c){angular.forEach(b.templates,function(d){var e=a('<li style="display: inline;"></li>')(b),f=a(d)(b);e.append(f),c.append(e)})}}}}}]),angular.module("template/constraint-list/constraint-list.html",[]).run(["$templateCache",function(a){a.put("template/constraint-list/constraint-list.html",'<ul>\n  	<li ng-show="constraints.length == 0" style="color: #aaaaaa;">(no constraints)</li>\n   	<li ng-repeat="constraint in constraints"><a href="" ng-click="removeConstraint(constraint)" ng-bind-html="constraint.label"></a></li>\n</ul>\n')}]),angular.module("template/facet-tree/facet-dir-content.html",[]).run(["$templateCache",function(a){a.put("template/facet-tree/facet-dir-content.html",'\n<!-- ng-show="dirset.pageCount > 1 || dirset.children.length > 5" -->\n\n\n<!--                 		<div ng-show="dirset.pageCount != 1" style="width:100%; background-color: #eeeeff"> -->\n<!--     		         		<pagination style="padding-left: {{16 * (dirset.path.getLength() + 1)}}px" class="pagination-tiny" max-size="7" total-items="dirset.childFacetCount" page="dirset.pageIndex" boundary-links="true" rotate="false" on-select-page="selectFacetPage(page, facet)" first-text="<<" previous-text="<" next-text=">" last-text=">>"></pagination> -->\n<!--                 		</div> -->\n\n<span ng-show="dirset.children.length == 0"\n	style="color: #aaaaaa; padding-left: {{16*(dirset.path.getLength()+1)}}px">(no\n	entries)</span>\n\n<div style="padding-left: {{16*(dirset.path.getLength()+1)}}px"\n	ng-repeat="facet in dirset.children"\n	ng-include="\'template/facet-tree/facet-tree-item.html\'" ></div>\n\n\n')}]),angular.module("template/facet-tree/facet-dir-ctrl.html",[]).run(["$templateCache",function(a){a.put("template/facet-tree/facet-dir-ctrl.html",'<div style="width: 100%; background-color: #eeeeff;">\n	<div style="padding-right: 16px; padding-left: {{16*(dirset.path.getLength()+1)}}px">\n\n		<form class="form-inline" role="form" ng-submit="doFilter(dirset.path, dirset.filter.filterString)">\n\n			<div class="form-group">\n				<input type="text" class="form-control input-sm" placeholder="Filter" ng-model="dirset.filter.filterString" value="{{dirset.filter.filterString}}" />\n			</div>\n			<div class="form-group">\n				<button type="submit" class="btn btn-default input-sm">Filter</button>\n			</div>\n			<div class="form-group" ng-if="dirset.pageCount > 1" style="background-color: #eeeeff">\n				<pagination\n					style="padding-left: {{16*(dirset.path.getLength()+1)}}px"\n					class="pagination-tiny" max-size="7"\n					total-items="dirset.childFacetCount" page="dirset.pageIndex"\n					boundary-links="true" rotate="false"\n					on-select-page="selectFacetPage(page, facet)" first-text="<<"\n					previous-text="<" next-text=">" last-text=">>">\n				</pagination>\n			</div>\n\n		</form>\n	</div>\n</div>\n\n')}]),angular.module("template/facet-tree/facet-tree-item.html",[]).run(["$templateCache",function(a){a.put("template/facet-tree/facet-tree-item.html",'<div ng-class="{\'frame\': facet.isExpanded}">\n\n<!--	<div class="facet-row" ng-class="{\'highlite\': facet.isExpanded}" ng-mouseover="setFacetHover(facet, true)" ng-mouseleave="setFacetHover(facet, false)"> -->\n	<div class="facet-row" ng-class="{\'highlite\': facet.isExpanded}">\n		<a ng-show="facet.isExpanded" href="" ng-click="toggleCollapsed(facet.item.getPath())"><span class="glyphicon glyphicon-chevron-down"></span></a>\n		<a ng-show="!facet.isExpanded" href="" ng-click="toggleCollapsed(facet.item.getPath())"><span class="glyphicon glyphicon-chevron-right"></span></a>\n\n		<a href="" title="Showing incoming facets. Click to show outgoing facets." ng-if="facet.isExpanded && facet.isIncomingActive === true" ng-click="selectOutgoing(facet.item.getPath())"><span class="glyphicon glyphicon-arrow-left"></span></a>\n		<a href="" title="Showing outgoing facets. Click to show incoming facets." ng-if="facet.isExpanded && facet.isOutgoingActive === true" ng-click="selectIncoming(facet.item.getPath())"><span class="glyphicon glyphicon-arrow-right"></span></a>\n\n\n		<a data-rdf-term="{{facet.item.getNode().toString()}}" title="{{facet.item.getNode().getUri()}}" href="" ng-click="toggleSelected(facet.item.getPath())">{{facet.item.getDoc().displayLabel}}</a>\n\n		<template-list style="list-style:none; display: inline; padding-left: 0px;" templates="plugins" data="facet" context="pluginContext"></template-list>\n\n		<span style="float: right" class="badge" ng-bind-html="(facet.item.getDistinctValueCount() == null || facet.item.getDistinctValueCount() < 0) ? \'&#8230;\' : (\'\' + facet.item.getDistinctValueCount())"></span>\n		\n		<div ng-if="facet.isExpanded && facet.item.getTags().controls.isContained && facet.isIncomingActive === true" style="width:100%" ng-repeat="dirset in [facet.incoming]" ng-include="\'template/facet-tree/facet-dir-ctrl.html\'"></div>\n		<div ng-if="facet.isExpanded && facet.item.getTags().controls.isContained && facet.isOutgoingActive === true" style="width:100%" ng-repeat="dirset in [facet.outgoing]" ng-include="\'template/facet-tree/facet-dir-ctrl.html\'"></div>\n	</div>\n	<div ng-if="facet.isExpanded" style="width:100%"> \n\n\n			<div ng-if="facet.isExpanded && facet.isIncomingActive === true" ng-repeat="dirset in [facet.incoming]" ng-include="\'template/facet-tree/facet-dir-content.html\'"></div>\n			<div ng-if="facet.isExpanded && facet.isOutgoingActive === true" ng-repeat="dirset in [facet.outgoing]" ng-include="\'template/facet-tree/facet-dir-content.html\'"></div>\n\n\n<!-- 		<tabset class="tabset-small"> -->\n<!-- 			<tab heading="Incoming Facets" active="{{facet.isIncomingActive === true}}" select="selectIncoming(facet.item.getPath())"> -->\n<!-- 				<div ng-repeat="dirset in [facet.incoming]" ng-include="\'template/facet-tree/facet-dir-content.html\'"></div> -->\n<!-- 			</tab> -->\n<!-- 			<tab heading="Outgoing Facets" active="{{facet.isOutgoingActive === true}}" select="selectOutgoing(facet.item.getPath())">					 -->\n<!-- 				<div ng-repeat="dirset in [facet.outgoing]" ng-include="\'template/facet-tree/facet-dir-content.html\'"></div> -->\n<!-- 			</tab> -->\n		</tabset>\n	</div>\n</div>\n')}]),angular.module("template/facet-tree/facet-tree-root.html",[]).run(["$templateCache",function(a){a.put("template/facet-tree/facet-tree-root.html",'<div>\n	<span ng-show="loading.data">\n		Loading... \n	    <span ng-show="loading.data">(data)</span>\n	</span>\n\n    <ng-include src="\'template/facet-tree/facet-tree-item.html\'"></ng-include>\n</div>\n')}]),angular.module("template/facet-value-list/facet-value-list.html",[]).run(["$templateCache",function(a){a.put("template/facet-value-list/facet-value-list.html",'<div class="frame">\n	<form ng-submit="filterTable(filterText)">\n	    <input type="text" ng-model="filterText" />\n		<input class="btn-primary" type="submit" value="Filter" />\n	</form>\n\n	<span ng-show="loading.data || loading.pageCount">\n		Loading... \n	    <span ng-show="loading.data">(data)</span>\n	    <span ng-show="loading.pageCount">(page count)</span>\n	</span>\n\n	<table>\n              <tr><th>Value</th><th>Constrained</th></tr>\n<!-- <th>Count</th> -->\n	    <tr ng-repeat="item in facetValues">\n                  <td><span title="{{item.node.toString()}}">{{item.displayLabel}}</span></td>\n<!--                    <td>todo</td> -->\n                  <td><input type="checkbox" ng-model="item.tags.isConstrainedEqual" ng-change="toggleConstraint(item)" /></td>\n              </tr>\n      	</table>\n  		<pagination class="pagination-small" total-items="pagination.totalItems" page="pagination.currentPage" max-size="pagination.maxSize" boundary-links="true" rotate="false" num-pages="pagination.numPages" previous-text="&lsaquo;" next-text="&rsaquo;" first-text="&laquo;" last-text="&raquo;"></pagination>\n</div>\n')}]),angular.module("template/jassa-list-browser/jassa-list-browser.html",[]).run(["$templateCache",function(a){a.put("template/jassa-list-browser/jassa-list-browser.html",'<div class="container">\n    <div class="row">\n        <div class="col-md-12">\n\n            <div class="alert alert-success" role="alert">\n\n                <list-search ng-model="searchString" submit="doFilter(searchString)" search-modes="searchModes" active-search-mode="activeSearchMode"></list-search>\n                <div>\n                    <ul class="list-inline">\n                        <li><span>Language Settings: </span></li>\n                        <li><lang-select langs="langs" available-langs="availableLangs"></lang-select></li>\n                    </ul>\n                </div>\n\n                <div>\n                    <strong>Found <span class="badge">{{totalItems}}</span> items</strong>\n                </div>\n            </div>\n\n        </div>\n    </div>\n\n    <div class="row">\n\n        <div class="col-md-12">\n\n            <jassa-media-list list-service="listService" offset="offset" limit="limit" filter="filter" total-items="totalItems" items="items" refresh="langs" context="context">\n                <ng-include src="context.itemTemplate"></ng-include>\n            </jassa-media-list>\n\n        </div>\n    </div>\n\n</div>\n')}]),angular.module("template/jassa-media-list/jassa-media-list.html",[]).run(["$templateCache",function(a){a.put("template/jassa-media-list/jassa-media-list.html",'<div style="width: 100%">\n\n    <div style="width: 100%; text-align: center">\n        <pagination\n            ng-show="items.length"\n            class="pagination"\n            ng-model="currentPage"\n            page="currentPage"\n            items-per-page="limit"\n            total-items="totalItems"\n            max-size="maxSize"\n            boundary-links="true"\n            rotate="false"\n            first-text="&lt;&lt;"\n            previous-text="&lt;"\n            next-text="&gt;"\n            last-text="&gt;&gt;"\n        ></pagination>\n    </div>\n\n    <ul class="media-list" style="width: 100%;">\n        <ng-transclude></ng-transclude>\n    </ul>\n\n    <div style="width: 100%; text-align: center">\n        <pagination\n            ng-show="items.length"\n            class="pagination"\n            ng-model="currentPage"\n            page="currentPage"\n            items-per-page="limit"\n            total-items="totalItems"\n            max-size="maxSize"\n            boundary-links="true"\n            rotate="false"\n            first-text="&lt;&lt;"\n            previous-text="&lt;"\n            next-text="&gt;"\n            last-text="&gt;&gt;"\n        ></pagination>\n    </div>\n</div>\n')}]),angular.module("template/lang-select/lang-select.html",[]).run(["$templateCache",function(a){a.put("template/lang-select/lang-select.html",'<ul class="list-inline">\n    <li>\n        <ul ui-sortable="sortConfig" ng-model="langs" class="list-inline">\n            <li class="lang-item" ng-repeat="lang in langs"><span class="label label-success preserve-whitespace">{{lang.length ? lang : \'  \'}}</span></li>\n        </ul>\n    </li>\n    <li ng-show="showLangInput">\n        <form ng-submit="confirmAddLang(newLang)" ui-keydown="{esc: \'showLangInput=false\'}">\n            <input auto-focus="focusLangInput" size="4" ng-model="newLang" type="text" class="lang-borderless" typeahead="lang for lang in getLangSuggestions() | filter:$viewValue | limitTo:8">\n            <button type="submit" style="cursor: pointer;" class="btn label label-info""><span class="glyphicon glyphicon-ok"></span></button>\n            <button type="reset" style="cursor: pointer;" class="btn label label-warning" ng-click="showLangInput=false"><span class="glyphicon glyphicon-remove"></span></button>\n        </form>\n    </li>\n    <li>\n        <button type="button" ng-show="!showLangInput" style="cursor: pointer;" class="btn label label-primary" ng-click="showLangInput=true; focusLangInput=true"><span class="glyphicon glyphicon-plus"></span></button>\n    </li>\n<ul>\n\n')}]),angular.module("template/list-search/list-search.html",[]).run(["$templateCache",function(a){a.put("template/list-search/list-search.html",'<form role="form" ng-submit="onSubmit()" novalidate>\n    <div class="form-group">\n        <div class="input-group">\n            <input\n                ng-model="ngModel"\n                type="text"\n                class="form-control"\n                placeholder="Find ...">\n\n            <div class="input-group-btn">\n                <button type="button" class="btn btn-default dropdown-toggle no-border-radius" style="margin-left: -1px; margin-right: -1px;" data-toggle="dropdown">{{activeSearchMode.label}} <span class="caret"></span></button>\n                <ul class="dropdown-menu dropdown-menu-right" role="menu">\n                    <li ng-repeat="searchMode in searchModes"><a ng-click="setActiveSearchMode(searchMode)" href="#"><span bind-html-unsafe="searchMode.label"></span></a></li>\n                </ul>\n            </div>\n\n            <span class="input-group-btn">\n                <button type="submit" class="btn btn-default" type="button"><span class="glyphicon glyphicon-search"></span></button>\n            </span>\n        </div>\n    </div>\n</form>\n\n')}]),angular.module("template/sparql-grid/sparql-grid.html",[]).run(["$templateCache",function(a){a.put("template/sparql-grid/sparql-grid.html",'<div>\n<div ng-grid="gridOptions"></div>\n</div>\n')}]),angular.module("template/template-list/template-list.html",[]).run(["$templateCache",function(a){a.put("template/template-list/template-list.html",'<ul ng-show="templates.length > 0">\n</ul>')}]);